// Package config provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.0 DO NOT EDIT.
package config

import (
	externalRef0 "github.com/DiMalovanyy/kube-vim/internal/config"
)

// Config Top-level configuration node for kube-vim.
type Config struct {
	// Image Configuration for kube-vim image providers.
	Image *ImageConfig `json:"image,omitempty"`

	// K8s Configuration related to Kubernetes operations.
	K8s *K8sConfig `json:"k8s,omitempty"`

	// Network Configuration for kube-vim cluster static network.
	Network *NetworkConfig `json:"network,omitempty"`

	// Service Configuration related to the kube-vim service.
	Service *ServiceConfig `json:"service,omitempty"`
}

// GlanceImageConfig Configuration for Glance image provider.
type GlanceImageConfig = map[string]interface{}

// HttpImageConfig Configuration for HTTP image provider.
type HttpImageConfig = map[string]interface{}

// ImageConfig Configuration for kube-vim image providers.
type ImageConfig struct {
	// Glance Configuration for Glance image provider.
	Glance *GlanceImageConfig `json:"glance,omitempty"`

	// Http Configuration for HTTP image provider.
	Http *HttpImageConfig `json:"http,omitempty"`

	// Local Configuration for Local image provider.
	Local *LocalImageConfig `json:"local,omitempty"`
}

// K8sConfig Configuration related to Kubernetes operations.
type K8sConfig struct {
	// Config Specific path to find k8s config file. By default k8s ServiceAccount place is used
	Config *string `json:"config,omitempty"`

	// Namespace Kubernetes namespace where kube-vim operates. Default is 'kube-nfv'.
	Namespace *string `json:"namespace,omitempty"`
}

// LocalImageConfig Configuration for Local image provider.
type LocalImageConfig struct {
	// Location Location where to locate images.
	Location *string `json:"location,omitempty"`
}

// NetworkConfig Configuration for kube-vim cluster static network.
type NetworkConfig struct {
	// Mgmt Configuration for kube-vim management network.
	Mgmt *map[string]interface{} `json:"mgmt,omitempty"`
}

// ServerConfig Kube-vim Server configuration.
type ServerConfig struct {
	// Port "A TCP port number specifies the endpoint for network communication on the service.
	// Port numbers range from 1 to 65535, with the lower range (1-1023) typically reserved for well-known services and system processes.
	// It is important to choose a port within the allowed range that does not conflict with other services running on the host.
	//
	// Ensure that the selected port is open and accessible for communication while respecting the security policies of your network.
	// Avoid using ports that are commonly blocked by firewalls or reserved for specific applications."
	Port *externalRef0.Port `json:"port,omitempty"`

	// Tls "TLS server configuration defines the settings for establishing secure TLS communication on the server-side. This configuration
	// ensures that the server can securely encrypt data with clients, protecting against eavesdropping, tampering, and forgery.
	// The configuration includes settings for the server's x.509 certificate and private key, which are essential for the TLS handshake."
	Tls *externalRef0.TlsServerConfig `json:"tls,omitempty"`
}

// ServiceConfig Configuration related to the kube-vim service.
type ServiceConfig struct {
	// LogLevel "Log level defines the severity of messages that will be recorded in the application's
	// logs. The available log levels are:
	// - 'trace': Provides the most detailed logging, often used for debugging specific issues.
	// - 'debug': Includes less verbose logging than 'trace', typically for development and debugging purposes.
	// - 'info': Standard logging level that provides general application flow and operational information.
	// - 'warn': Logs warnings that highlight potential issues or unexpected conditions that do not necessarily indicate a failure.
	// - 'error': Logs errors that indicate a failure or significant issue in the application.
	//
	// The default value is 'info', which strikes a balance between verbosity and usefulness for most environments."
	LogLevel *externalRef0.LogLevel `json:"logLevel,omitempty"`

	// Server Kube-vim Server configuration.
	Server *ServerConfig `json:"server,omitempty"`
}
